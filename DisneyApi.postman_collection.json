{
	"info": {
		"_postman_id": "62e76278-1fac-4abf-87f1-3e5d9dd7021f",
		"name": "DisneyApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register / Login",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"Andrea\",\r\n    \"email\" : \"andree.reyna@gmail.com\",\r\n    \"clave\" : \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/auth/register",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": [
						{
							"name": "Register",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"Andrea\",\r\n    \"email\" : \"andree.reyna@gmail.com\",\r\n    \"clave\" : \"123456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/auth/register",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "text/plain;charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "16"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 15:01:23 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "Registro exitoso"
						}
					]
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"Andrea\",\r\n    \"clave\" : \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/auth/login",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"Andrea\",\r\n    \"clave\" : \"123456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/auth/login",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 15:02:00 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "Token de acceso: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDA2MjB9.sgjSkc6mnrQK_d2_jZQ__HtH1DyaIx0QEiIHOtcEovZ-yPJ6LAvs1j_D21F1K81292R5yMbzUMdZK_LEmvHPzQ"
						}
					]
				}
			]
		},
		{
			"name": "Movies",
			"item": [
				{
					"name": "Movies",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDQ0NjR9.rBR2vZxhJD7vfri8jD8G0pleyJLqUwPoE-CNudfz9m7Nj_bNGD4XUALM50NjSU_Khnv-KrxjI1EjKucdnyEtKQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/movies",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movies"
							]
						}
					},
					"response": [
						{
							"name": "Movies",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/movies",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"movies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 16:14:58 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"titulo\": \"101 Dalmatas\",\n        \"imagen\": \"101-dalmatas.jpg\",\n        \"fechaCreacion\": \"1961-01-25\"\n    },\n    {\n        \"titulo\": \"El Rey Leon\",\n        \"imagen\": \"450_1000.jpg\",\n        \"fechaCreacion\": \"1994-06-15\"\n    }\n]"
						}
					]
				},
				{
					"name": "Movie ID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDM3MjR9.oI05KDoKHMug5S9wCA-XacetVflWKaN5GprKCnbQLI63st1rzrz_YuaAnqu5rGQAoGTLvcegfoMVmSDWt4624g",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/movies/1",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": [
						{
							"name": "Movie ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/movies/1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"movies",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 15:55:53 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"titulo\": \"101 Dalmatas\",\n    \"imagen\": \"101-dalmatas.jpg\",\n    \"fechaCreacion\": \"1961-01-25\",\n    \"calificacion\": 4,\n    \"personajes\": [\n        {\n            \"id\": 1,\n            \"nombre\": \"Pongo\",\n            \"imagen\": \"Pongo.png\",\n            \"edad\": 1,\n            \"peso\": 20,\n            \"historia\": \"Un dálmata que vivía en un pequeño apartamento junto a su amo Roger. \"\n        },\n        {\n            \"id\": 2,\n            \"nombre\": \"Cruella de Vil\",\n            \"imagen\": \"Cruella.jpg\",\n            \"edad\": 42,\n            \"peso\": 60,\n            \"historia\": \"Cruella es una mujer a la que le encantan las pieles. Es capaz de hacer cualquier cosa para conseguir nuevas pieles. \"\n        }\n    ],\n    \"genero\": {\n        \"id\": 4,\n        \"nombre\": \"Aventura\",\n        \"imagen\": \"Aventura.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Movie Save",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDQ0NjR9.rBR2vZxhJD7vfri8jD8G0pleyJLqUwPoE-CNudfz9m7Nj_bNGD4XUALM50NjSU_Khnv-KrxjI1EjKucdnyEtKQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "img",
									"type": "file",
									"src": "/C:/Users/Andrea/Desktop/450_1000.jpg"
								},
								{
									"key": "titulo",
									"value": "El Rey Leon",
									"type": "default"
								},
								{
									"key": "fechaCreacion",
									"value": "1994-06-15",
									"contentType": "",
									"type": "default"
								},
								{
									"key": "calificacion",
									"value": "5",
									"type": "default"
								},
								{
									"key": "personajes",
									"value": "3",
									"contentType": "",
									"type": "text"
								},
								{
									"key": "personajes",
									"value": "4",
									"type": "text"
								},
								{
									"key": "personajes",
									"value": "5",
									"type": "text"
								},
								{
									"key": "genero",
									"value": "3",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "localhost:8080/movies",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movies"
							]
						}
					},
					"response": [
						{
							"name": "Movie Save",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "img",
											"type": "file",
											"src": "/C:/Users/Andrea/Desktop/101-dalmatas.jpg"
										},
										{
											"key": "titulo",
											"value": "101 Dalmatas",
											"type": "default"
										},
										{
											"key": "fechaCreacion",
											"value": "1961-01-25",
											"contentType": "",
											"type": "default"
										},
										{
											"key": "calificacion",
											"value": "4",
											"type": "default"
										},
										{
											"key": "personajes",
											"value": "1",
											"contentType": "",
											"type": "text"
										},
										{
											"key": "personajes",
											"value": "2",
											"type": "text"
										},
										{
											"key": "personajes",
											"value": "4",
											"type": "text",
											"disabled": true
										},
										{
											"key": "genero",
											"value": "4",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "localhost:8080/movies",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"movies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 15:55:20 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"titulo\": \"101 Dalmatas\",\n    \"imagen\": \"101-dalmatas.jpg\",\n    \"fechaCreacion\": \"1961-01-25\",\n    \"calificacion\": 4,\n    \"personajes\": [\n        {\n            \"id\": 1,\n            \"nombre\": \"Pongo\",\n            \"imagen\": \"Pongo.png\",\n            \"edad\": 1,\n            \"peso\": 20,\n            \"historia\": \"Un dálmata que vivía en un pequeño apartamento junto a su amo Roger. \"\n        },\n        {\n            \"id\": 2,\n            \"nombre\": \"Cruella de Vil\",\n            \"imagen\": \"Cruella.jpg\",\n            \"edad\": 42,\n            \"peso\": 60,\n            \"historia\": \"Cruella es una mujer a la que le encantan las pieles. Es capaz de hacer cualquier cosa para conseguir nuevas pieles. \"\n        }\n    ],\n    \"genero\": {\n        \"id\": 4,\n        \"nombre\": \"Aventura\",\n        \"imagen\": \"Aventura.png\"\n    }\n}"
						},
						{
							"name": "Movie Save",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "img",
											"type": "file",
											"src": "/C:/Users/Andrea/Desktop/450_1000.jpg"
										},
										{
											"key": "titulo",
											"value": "El Rey Leon",
											"type": "default"
										},
										{
											"key": "fechaCreacion",
											"value": "1994-06-15",
											"contentType": "",
											"type": "default"
										},
										{
											"key": "calificacion",
											"value": "5",
											"type": "default"
										},
										{
											"key": "personajes",
											"value": "3",
											"contentType": "",
											"type": "text"
										},
										{
											"key": "personajes",
											"value": "4",
											"type": "text"
										},
										{
											"key": "personajes",
											"value": "5",
											"type": "text"
										},
										{
											"key": "genero",
											"value": "3",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "localhost:8080/movies",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"movies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 16:10:31 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"titulo\": \"El Rey Leon\",\n    \"imagen\": \"450_1000.jpg\",\n    \"fechaCreacion\": \"1994-06-15\",\n    \"calificacion\": 5,\n    \"personajes\": [\n        {\n            \"id\": 3,\n            \"nombre\": \"Simba\",\n            \"imagen\": \"Simba.jpg\",\n            \"edad\": 1,\n            \"peso\": 45,\n            \"historia\": \"Simba es el hijo de los reyes Mufasa y Sarabi, y por lo tanto heredero de las Pride Lands.\"\n        },\n        {\n            \"id\": 4,\n            \"nombre\": \"Timon\",\n            \"imagen\": \"Timon-icon.png\",\n            \"edad\": 5,\n            \"peso\": 2,\n            \"historia\": \"Una suricata macho ensimismada y ocurrente.\"\n        },\n        {\n            \"id\": 5,\n            \"nombre\": \"Pumba\",\n            \"imagen\": \"Pumba.jpg\",\n            \"edad\": 7,\n            \"peso\": 50,\n            \"historia\": \"Un inocente facóquero —aunque en la película se refieren a él como un jabalí— que sufre flatulencias y es el mejor amigo de Timón.\"\n        }\n    ],\n    \"genero\": {\n        \"id\": 3,\n        \"nombre\": \"Drama\",\n        \"imagen\": \"Drama.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Movie DELETE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDQ0NjR9.rBR2vZxhJD7vfri8jD8G0pleyJLqUwPoE-CNudfz9m7Nj_bNGD4XUALM50NjSU_Khnv-KrxjI1EjKucdnyEtKQ",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8080/movies/delete/1",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movies",
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Movie Name",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDM3MjR9.oI05KDoKHMug5S9wCA-XacetVflWKaN5GprKCnbQLI63st1rzrz_YuaAnqu5rGQAoGTLvcegfoMVmSDWt4624g",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/movies?name=101 Dalmatas",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "name",
									"value": "101 Dalmatas"
								}
							]
						}
					},
					"response": [
						{
							"name": "Movie Name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/movies?name=101 Dalmatas",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "name",
											"value": "101 Dalmatas"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 15:56:35 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"titulo\": \"101 Dalmatas\",\n    \"imagen\": \"101-dalmatas.jpg\",\n    \"fechaCreacion\": \"1961-01-25\",\n    \"calificacion\": 4,\n    \"personajes\": [\n        {\n            \"id\": 1,\n            \"nombre\": \"Pongo\",\n            \"imagen\": \"Pongo.png\",\n            \"edad\": 1,\n            \"peso\": 20,\n            \"historia\": \"Un dálmata que vivía en un pequeño apartamento junto a su amo Roger. \"\n        },\n        {\n            \"id\": 2,\n            \"nombre\": \"Cruella de Vil\",\n            \"imagen\": \"Cruella.jpg\",\n            \"edad\": 42,\n            \"peso\": 60,\n            \"historia\": \"Cruella es una mujer a la que le encantan las pieles. Es capaz de hacer cualquier cosa para conseguir nuevas pieles. \"\n        }\n    ],\n    \"genero\": {\n        \"id\": 4,\n        \"nombre\": \"Aventura\",\n        \"imagen\": \"Aventura.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Movies Genre",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDM3MjR9.oI05KDoKHMug5S9wCA-XacetVflWKaN5GprKCnbQLI63st1rzrz_YuaAnqu5rGQAoGTLvcegfoMVmSDWt4624g",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/movies?genre=1",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "genre",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "Movies Genre",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/movies?genre=1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "genre",
											"value": "1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 15:57:11 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-01-12T15:57:11.346+00:00\",\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"trace\": \"java.lang.Exception: No hay peliculas con ese genero\\r\\n\\tat com.AlkemyChallange.Disney.services.PeliculaService.buscarPorGenero(PeliculaService.java:156)\\r\\n\\tat com.AlkemyChallange.Disney.services.PeliculaService$$FastClassBySpringCGLIB$$930620a1.invoke(<generated>)\\r\\n\\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\\r\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)\\r\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\\r\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)\\r\\n\\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\\r\\n\\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\\r\\n\\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\\r\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\\r\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)\\r\\n\\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)\\r\\n\\tat com.AlkemyChallange.Disney.services.PeliculaService$$EnhancerBySpringCGLIB$$4c99ee71.buscarPorGenero(<generated>)\\r\\n\\tat com.AlkemyChallange.Disney.controllers.PeliculaController.buscarPorNombre(PeliculaController.java:48)\\r\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\r\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\r\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\r\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\r\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\\r\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\\r\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\r\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\r\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\r\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\r\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\r\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\r\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\r\\n\\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\\r\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:655)\\r\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\r\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)\\r\\n\\tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)\\r\\n\\tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)\\r\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)\\r\\n\\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat com.AlkemyChallange.Disney.security.jwt.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:39)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)\\r\\n\\tat org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)\\r\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\\r\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)\\r\\n\\tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)\\r\\n\\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)\\r\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)\\r\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\r\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\r\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)\\r\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\r\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\r\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\r\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\\r\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)\\r\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\r\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)\\r\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)\\r\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\r\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\r\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\r\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\r\\n\\tat java.lang.Thread.run(Thread.java:745)\\r\\n\",\n    \"message\": \"No hay peliculas con ese genero\",\n    \"path\": \"/movies\"\n}"
						}
					]
				},
				{
					"name": "Movies Order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDQ0NjR9.rBR2vZxhJD7vfri8jD8G0pleyJLqUwPoE-CNudfz9m7Nj_bNGD4XUALM50NjSU_Khnv-KrxjI1EjKucdnyEtKQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/movies?order=ASC",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "order",
									"value": "ASC"
								}
							]
						}
					},
					"response": [
						{
							"name": "Movies Order",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/movies?order=ASC",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "order",
											"value": "ASC"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 16:11:26 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"titulo\": \"101 Dalmatas\",\n        \"imagen\": \"101-dalmatas.jpg\",\n        \"fechaCreacion\": \"1961-01-25\"\n    },\n    {\n        \"titulo\": \"El Rey Leon\",\n        \"imagen\": \"450_1000.jpg\",\n        \"fechaCreacion\": \"1994-06-15\"\n    }\n]"
						},
						{
							"name": "Movies Order",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/movies?order=DESC",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "order",
											"value": "DESC"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 16:11:58 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"titulo\": \"El Rey Leon\",\n        \"imagen\": \"450_1000.jpg\",\n        \"fechaCreacion\": \"1994-06-15\"\n    },\n    {\n        \"titulo\": \"101 Dalmatas\",\n        \"imagen\": \"101-dalmatas.jpg\",\n        \"fechaCreacion\": \"1961-01-25\"\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "Characters",
			"item": [
				{
					"name": "Characters",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDQ0NjR9.rBR2vZxhJD7vfri8jD8G0pleyJLqUwPoE-CNudfz9m7Nj_bNGD4XUALM50NjSU_Khnv-KrxjI1EjKucdnyEtKQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/characters/",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characters",
								""
							]
						}
					},
					"response": [
						{
							"name": "Characters",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/characters/",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"characters",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 15:23:42 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"nombre\": \"Pongo\",\n        \"imagen\": \"Pongo.png\"\n    },\n    {\n        \"nombre\": \"Cruella de Vil\",\n        \"imagen\": \"Cruella.jpg\"\n    }\n]"
						}
					]
				},
				{
					"name": "Character ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDE4ODd9.DUwsVM1i-JAE_kpYQFbe778-g-PNIQRVt1p-OfgVXbMg8QgN41lAJNuU80iPZlwu_VEqmYfau3wPdxCqf0sU9Q",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/characters/1",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characters",
								"1"
							]
						}
					},
					"response": [
						{
							"name": "Character ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/characters/1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"characters",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 15:24:01 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"nombre\": \"Pongo\",\n    \"imagen\": \"Pongo.png\",\n    \"edad\": 1,\n    \"peso\": 20,\n    \"historia\": \"Un dálmata que vivía en un pequeño apartamento junto a su amo Roger. \",\n    \"peliculas\": []\n}"
						}
					]
				},
				{
					"name": "Character Save",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDQ0NjR9.rBR2vZxhJD7vfri8jD8G0pleyJLqUwPoE-CNudfz9m7Nj_bNGD4XUALM50NjSU_Khnv-KrxjI1EjKucdnyEtKQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "img",
									"type": "file",
									"src": "/C:/Users/Andrea/Desktop/Pumba.jpg"
								},
								{
									"key": "nombre",
									"value": "Pumba",
									"type": "default"
								},
								{
									"key": "edad",
									"value": "7",
									"type": "default"
								},
								{
									"key": "peso",
									"value": "50",
									"type": "default"
								},
								{
									"key": "historia",
									"value": "Un inocente facóquero —aunque en la película se refieren a él como un jabalí— que sufre flatulencias y es el mejor amigo de Timón.",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "localhost:8080/characters",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characters"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Character Save",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "img",
											"type": "file",
											"src": "/C:/Users/Andrea/Desktop/Pongo.png"
										},
										{
											"key": "nombre",
											"value": "Pongo",
											"type": "default"
										},
										{
											"key": "edad",
											"value": "1",
											"type": "default"
										},
										{
											"key": "peso",
											"value": "20",
											"type": "default"
										},
										{
											"key": "historia",
											"value": "Un dálmata que vivía en un pequeño apartamento junto a su amo Roger. ",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "localhost:8080/characters",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"characters"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 15:09:21 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"nombre\": \"Pongo\",\n    \"imagen\": \"Pongo.png\",\n    \"edad\": 1,\n    \"peso\": 20,\n    \"historia\": \"Un dálmata que vivía en un pequeño apartamento junto a su amo Roger. \",\n    \"peliculas\": []\n}"
						},
						{
							"name": "Character Save",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "img",
											"type": "file",
											"src": "/C:/Users/Andrea/Desktop/Cruella.jpg"
										},
										{
											"key": "nombre",
											"value": "Cruella de Vil",
											"type": "default"
										},
										{
											"key": "edad",
											"value": "42",
											"type": "default"
										},
										{
											"key": "peso",
											"value": "60",
											"type": "default"
										},
										{
											"key": "historia",
											"value": "Cruella es una mujer a la que le encantan las pieles. Es capaz de hacer cualquier cosa para conseguir nuevas pieles. ",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "localhost:8080/characters",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"characters"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 15:12:05 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"nombre\": \"Cruella de Vil\",\n    \"imagen\": \"Cruella.jpg\",\n    \"edad\": 42,\n    \"peso\": 60,\n    \"historia\": \"Cruella es una mujer a la que le encantan las pieles. Es capaz de hacer cualquier cosa para conseguir nuevas pieles. \",\n    \"peliculas\": []\n}"
						}
					]
				},
				{
					"name": "Character DELETE",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8080/characters/delete/1",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characters",
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Character Name",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/characters?name=Personaje2",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characters"
							],
							"query": [
								{
									"key": "name",
									"value": "Personaje2"
								}
							]
						}
					},
					"response": [
						{
							"name": "Character Name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/characters?name=Simba",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"characters"
									],
									"query": [
										{
											"key": "name",
											"value": "Simba"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 16:18:23 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 3,\n    \"nombre\": \"Simba\",\n    \"imagen\": \"Simba.jpg\",\n    \"edad\": 1,\n    \"peso\": 45,\n    \"historia\": \"Simba es el hijo de los reyes Mufasa y Sarabi, y por lo tanto heredero de las Pride Lands.\",\n    \"peliculas\": [\n        {\n            \"id\": 2,\n            \"titulo\": \"El Rey Leon\",\n            \"imagen\": \"450_1000.jpg\",\n            \"fechaCreacion\": \"1994-06-15\",\n            \"calificacion\": 5,\n            \"personajes\": [\n                {\n                    \"id\": 3,\n                    \"nombre\": \"Simba\",\n                    \"imagen\": \"Simba.jpg\",\n                    \"edad\": 1,\n                    \"peso\": 45,\n                    \"historia\": \"Simba es el hijo de los reyes Mufasa y Sarabi, y por lo tanto heredero de las Pride Lands.\"\n                },\n                {\n                    \"id\": 4,\n                    \"nombre\": \"Timon\",\n                    \"imagen\": \"Timon-icon.png\",\n                    \"edad\": 5,\n                    \"peso\": 2,\n                    \"historia\": \"Una suricata macho ensimismada y ocurrente.\"\n                },\n                {\n                    \"id\": 5,\n                    \"nombre\": \"Pumba\",\n                    \"imagen\": \"Pumba.jpg\",\n                    \"edad\": 7,\n                    \"peso\": 50,\n                    \"historia\": \"Un inocente facóquero —aunque en la película se refieren a él como un jabalí— que sufre flatulencias y es el mejor amigo de Timón.\"\n                }\n            ],\n            \"genero\": {\n                \"id\": 3,\n                \"nombre\": \"Drama\",\n                \"imagen\": \"Drama.png\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Characters Age",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/characters?age=20",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"characters"
							],
							"query": [
								{
									"key": "age",
									"value": "20"
								}
							]
						}
					},
					"response": [
						{
							"name": "Characters Age",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/characters?age=20",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"characters"
									],
									"query": [
										{
											"key": "age",
											"value": "20"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 16:18:42 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"timestamp\": \"2022-01-12T16:18:42.908+00:00\",\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"trace\": \"java.lang.Exception: No hay personajes con esa edad\\r\\n\\tat com.AlkemyChallange.Disney.services.PersonajeService.buscarPorEdad(PersonajeService.java:110)\\r\\n\\tat com.AlkemyChallange.Disney.services.PersonajeService$$FastClassBySpringCGLIB$$eaa574a9.invoke(<generated>)\\r\\n\\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\\r\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)\\r\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\\r\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)\\r\\n\\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\\r\\n\\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\\r\\n\\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\\r\\n\\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\\r\\n\\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)\\r\\n\\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)\\r\\n\\tat com.AlkemyChallange.Disney.services.PersonajeService$$EnhancerBySpringCGLIB$$3488af89.buscarPorEdad(<generated>)\\r\\n\\tat com.AlkemyChallange.Disney.controllers.PersonajeController.buscarPorEdad(PersonajeController.java:47)\\r\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\r\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\r\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\r\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\r\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\\r\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\\r\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\\r\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\\r\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\\r\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\r\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)\\r\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\\r\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\\r\\n\\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\\r\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:655)\\r\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\\r\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)\\r\\n\\tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)\\r\\n\\tat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)\\r\\n\\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)\\r\\n\\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat com.AlkemyChallange.Disney.security.jwt.JWTAuthorizationFilter.doFilterInternal(JWTAuthorizationFilter.java:39)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)\\r\\n\\tat org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)\\r\\n\\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\\r\\n\\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)\\r\\n\\tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\r\\n\\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)\\r\\n\\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)\\r\\n\\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)\\r\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)\\r\\n\\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\\r\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\\r\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\\r\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)\\r\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\\r\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\\r\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\\r\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\\r\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)\\r\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\\r\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)\\r\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)\\r\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\r\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\r\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\r\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\r\\n\\tat java.lang.Thread.run(Thread.java:745)\\r\\n\",\n    \"message\": \"No hay personajes con esa edad\",\n    \"path\": \"/characters\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Genres",
			"item": [
				{
					"name": "Genres",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDQ0NjR9.rBR2vZxhJD7vfri8jD8G0pleyJLqUwPoE-CNudfz9m7Nj_bNGD4XUALM50NjSU_Khnv-KrxjI1EjKucdnyEtKQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/genres",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"genres"
							]
						}
					},
					"response": [
						{
							"name": "Genres",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/genres",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"genres"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 16:12:39 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"nombre\": \"Acción\",\n        \"imagen\": \"Accion.png\",\n        \"peliculas\": []\n    },\n    {\n        \"id\": 2,\n        \"nombre\": \"Comedia\",\n        \"imagen\": \"Comedia.png\",\n        \"peliculas\": []\n    },\n    {\n        \"id\": 3,\n        \"nombre\": \"Drama\",\n        \"imagen\": \"Drama.png\",\n        \"peliculas\": [\n            {\n                \"id\": 2,\n                \"titulo\": \"El Rey Leon\",\n                \"imagen\": \"450_1000.jpg\",\n                \"fechaCreacion\": \"1994-06-15\",\n                \"calificacion\": 5,\n                \"personajes\": [\n                    {\n                        \"id\": 3,\n                        \"nombre\": \"Simba\",\n                        \"imagen\": \"Simba.jpg\",\n                        \"edad\": 1,\n                        \"peso\": 45,\n                        \"historia\": \"Simba es el hijo de los reyes Mufasa y Sarabi, y por lo tanto heredero de las Pride Lands.\"\n                    },\n                    {\n                        \"id\": 4,\n                        \"nombre\": \"Timon\",\n                        \"imagen\": \"Timon-icon.png\",\n                        \"edad\": 5,\n                        \"peso\": 2,\n                        \"historia\": \"Una suricata macho ensimismada y ocurrente.\"\n                    },\n                    {\n                        \"id\": 5,\n                        \"nombre\": \"Pumba\",\n                        \"imagen\": \"Pumba.jpg\",\n                        \"edad\": 7,\n                        \"peso\": 50,\n                        \"historia\": \"Un inocente facóquero —aunque en la película se refieren a él como un jabalí— que sufre flatulencias y es el mejor amigo de Timón.\"\n                    }\n                ],\n                \"genero\": {\n                    \"id\": 3,\n                    \"nombre\": \"Drama\",\n                    \"imagen\": \"Drama.png\"\n                }\n            }\n        ]\n    },\n    {\n        \"id\": 4,\n        \"nombre\": \"Aventura\",\n        \"imagen\": \"Aventura.png\",\n        \"peliculas\": [\n            {\n                \"id\": 1,\n                \"titulo\": \"101 Dalmatas\",\n                \"imagen\": \"101-dalmatas.jpg\",\n                \"fechaCreacion\": \"1961-01-25\",\n                \"calificacion\": 4,\n                \"personajes\": [\n                    {\n                        \"id\": 1,\n                        \"nombre\": \"Pongo\",\n                        \"imagen\": \"Pongo.png\",\n                        \"edad\": 1,\n                        \"peso\": 20,\n                        \"historia\": \"Un dálmata que vivía en un pequeño apartamento junto a su amo Roger. \"\n                    },\n                    {\n                        \"id\": 2,\n                        \"nombre\": \"Cruella de Vil\",\n                        \"imagen\": \"Cruella.jpg\",\n                        \"edad\": 42,\n                        \"peso\": 60,\n                        \"historia\": \"Cruella es una mujer a la que le encantan las pieles. Es capaz de hacer cualquier cosa para conseguir nuevas pieles. \"\n                    }\n                ],\n                \"genero\": {\n                    \"id\": 4,\n                    \"nombre\": \"Aventura\",\n                    \"imagen\": \"Aventura.png\"\n                }\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Genres Save",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDA2MjB9.sgjSkc6mnrQK_d2_jZQ__HtH1DyaIx0QEiIHOtcEovZ-yPJ6LAvs1j_D21F1K81292R5yMbzUMdZK_LEmvHPzQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "img",
									"type": "file",
									"src": []
								},
								{
									"key": "nombre",
									"value": "Aventura",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "localhost:8080/genres",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"genres"
							]
						}
					},
					"response": [
						{
							"name": "Genres Save",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "img",
											"type": "file",
											"src": "/C:/Users/Andrea/Downloads/Accion.png"
										},
										{
											"key": "nombre",
											"value": "Acción",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "localhost:8080/genres",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"genres"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 15:03:19 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"nombre\": \"Acción\",\n    \"imagen\": \"Accion.png\",\n    \"peliculas\": null\n}"
						},
						{
							"name": "Genres Save",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "img",
											"type": "file",
											"src": "/C:/Users/Andrea/Downloads/Comedia.png"
										},
										{
											"key": "nombre",
											"value": "Comedia",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "localhost:8080/genres",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"genres"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 15:04:25 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"nombre\": \"Comedia\",\n    \"imagen\": \"Comedia.png\",\n    \"peliculas\": null\n}"
						},
						{
							"name": "Genres Save",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "img",
											"type": "file",
											"src": "/C:/Users/Andrea/Downloads/Drama.png"
										},
										{
											"key": "nombre",
											"value": "Drama",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "localhost:8080/genres",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"genres"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 15:04:57 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 3,\n    \"nombre\": \"Drama\",\n    \"imagen\": \"Drama.png\",\n    \"peliculas\": null\n}"
						}
					]
				},
				{
					"name": "Genred DELETE",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8080/genres/delete/1",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"genres",
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Genre ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDA2MjB9.sgjSkc6mnrQK_d2_jZQ__HtH1DyaIx0QEiIHOtcEovZ-yPJ6LAvs1j_D21F1K81292R5yMbzUMdZK_LEmvHPzQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/genres/1",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"genres",
								"1"
							]
						}
					},
					"response": [
						{
							"name": "Genre ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/genres/1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"genres",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 12 Jan 2022 15:05:45 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"nombre\": \"Acción\",\n    \"imagen\": \"Accion.png\",\n    \"peliculas\": []\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJBbmRyZWEiLCJleHAiOjE2NDIwMDQ0NjR9.rBR2vZxhJD7vfri8jD8G0pleyJLqUwPoE-CNudfz9m7Nj_bNGD4XUALM50NjSU_Khnv-KrxjI1EjKucdnyEtKQ",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}